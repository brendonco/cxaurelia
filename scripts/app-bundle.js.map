{"version":3,"sources":["app.js","environment.js","globalconfig.js","main.js","employee/employee.js","login/AuthService.js","login/login.js","resources/index.js","employee/claims/accounts-claims.js","employee/claims/claims.js","employee/claims/history-claims.js","employee/claims/pending-claims.js","employee/claims/submit-claims.js","employee/dashboard/dashboard.js","employee/wellness/wellness.js","/Users/brendonco/GitHub/cxaurelia/src/app.html","/Users/brendonco/GitHub/cxaurelia/src/employee/employee.html","/Users/brendonco/GitHub/cxaurelia/src/login/login.html","/Users/brendonco/GitHub/cxaurelia/src/employee/claims/accounts-claims.html","style/_global.scss","style/_navigation.scss","main.css","/Users/brendonco/GitHub/cxaurelia/src/employee/claims/claims.html","/Users/brendonco/GitHub/cxaurelia/src/employee/claims/history-claims.html","/Users/brendonco/GitHub/cxaurelia/src/employee/claims/pending-claims.html","/Users/brendonco/GitHub/cxaurelia/src/employee/claims/submit-claims.html","/Users/brendonco/GitHub/cxaurelia/src/employee/components/navigation.html","/Users/brendonco/GitHub/cxaurelia/src/employee/dashboard/dashboard.html","/Users/brendonco/GitHub/cxaurelia/src/employee/wellness/wellness.html"],"names":["App","AuthService","auth","configureRouter","config","router","title","map","route","name","moduleId","nav","settings","mapUnknownRoutes","debug","testing","clientName","window","location","pathname","substring","baseUrl","loginUrl","tokenName","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","container","get","root","isAuthenticated","setRoot","Dashboard","Aurelia","HttpClient","session","http","withHeader","withBaseUrl","app","JSON","parse","localStorage","login","username","password","errorCallback","data","post","response","content","stringify","portal","defaultPage","clientConfig","defaultLandingPage","path","catch","err","stackTrace","status","statusCode","statusText","message","code","console","log","logout","can","permission","Login","error","activate","AccountsClaims","Claims","HistoryClaims","PendingClaims","SubmitClaims","Wellness"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { inject } from 'aurelia-framework';\nimport AuthService from './login/AuthService';\nimport {Redirect} from 'aurelia-router';\n\n@inject(AuthService)\nexport class App {\n  constructor(AuthService) {\n    this.auth = AuthService;\n  }\n  configureRouter(config, router) {\n    this.router = router;\n\n    config.title = 'CXA';\n    // remove hash from URL\n    // config.options.pushState = true;\n    // custom base tag\n    // config.options.root = '/';\n    // config.addAuthorizeStep(AuthorizeStep);\n    config.map([\n      { route: ['', 'login'], name: 'login',     moduleId: 'login/login', nav: false,  title: 'Login', settings: {auth: true}}\n    ]);\n\n    config.mapUnknownRoutes('login/login');\n  }\n}","export default {\n  debug: true,\n  testing: true\n};\n","var clientName = window.location.pathname.substring(1);\n\nexport default {\n    baseUrl: '',\n    loginUrl: 'api/1/user/login',\n    tokenName: 'ah12h3',\n    clientName: clientName\n};","import AuthService from './login/AuthService';\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => {\n    var auth = aurelia.container.get(AuthService);\n\n    let root = auth.isAuthenticated() ? 'app' : 'login/login';\n\n    aurelia.setRoot(root);\n  });\n}\n","// import { inject } from 'aurelia-framework';\n// import AuthService from '../login/AuthService';\n// import {Redirect} from 'aurelia-router';\n\n// @inject(AuthService)\n// export class Employee {\n//   constructor(AuthService) {\n//     this.auth = AuthService;\n//   }\n//   configureRouter(config, router) {\n//     this.router = router;\n\n//     config.title = 'CXA';\n//     // remove hash from URL\n//     // config.options.pushState = true;\n//     // custom base tag\n//     // config.options.root = '/';\n//     config.map([\n//         { route: 'dashboard', name: 'dashboard', title: 'Dashboard', moduleId: 'employee/dashboard/dashboard', nav: true, settings: {'auth': true} }\n//     ]);\n\n//     config.addAuthorizeStep(AuthorizeStep);\n//   }\n// }\n\n// class AuthorizeStep {\n//   run(navigationInstruction, next) {\n//     if (navigationInstruction.getAllInstructions().some(i => i.config.settings.auth)) {\n//       var isLoggedIn = this.auth.isAuthenticated();\n//       if (!isLoggedIn) {\n//         return next.cancel(new Redirect('login'));\n//       }\n//     }\n\n//     return next();\n//   }\n// }\n\nimport AuthService from '../login/AuthService';\nimport { inject } from 'aurelia-framework';\n\n@inject(AuthService)\nexport class Dashboard {\n  constructor(AuthService) {\n    this.auth = AuthService;\n  }\n\n  configureRouter(config, router) {\n    this.router = router;\n\n    config.title = 'Member';\n    // remove hash from URL\n    // config.options.pushState = true;\n    // custom base tag\n    // config.options.root = '/';\n    config.map([\n            { route: ['', 'dashboard'], name: 'dashboard', title: 'Home', moduleId: 'employee/dashboard/dashboard', nav: true, settings: {auth: true} },\n            { route: 'wellness', name: 'wellness', title: 'Wellness', moduleId: 'employee/wellness/wellness', nav: true, settings: {auth: true} },\n            { route: 'claims', name: 'claims', title: 'My Claims', moduleId: 'employee/claims/claims', nav: true, settings: {auth: true} }\n        ]);\n    // this.router.configure((config)=> {\n    //     config.map([\n    //         { route: 'dashboard', name: 'dashboard', title: 'Dashboard', moduleId: 'employee/dashboard/dashboard', nav: true, settings: {auth: true, isActive: true} },\n    //         { route: 'wellness', name: 'wellness', title: 'Wellness', moduleId: 'employee/wellness/wellness', nav: true, settings: {auth: true} }\n    //     ]);\n    // });\n  }\n}\n","import { Aurelia, inject } from 'aurelia-framework';\nimport { HttpClient } from 'aurelia-http-client';\nimport config from '../globalconfig';\n\n@inject(Aurelia, HttpClient)\nexport default class AuthService {\n\n    session = null\n\n    // As soon as the AuthService is created, we query local storage to\n    // see if the login information has been stored. If so, we immediately\n    // load it into the session object on the AuthService.\n    constructor(Aurelia, HttpClient) {\n        HttpClient.configure(http => {\n            http.withHeader('Content-Type', 'application/json');\n            http.withBaseUrl(config.baseUrl);\n        });\n\n        this.http = HttpClient;\n        this.app = Aurelia;\n\n        this.session = JSON.parse(localStorage[config.tokenName] || null);\n    }\n\n    login(username, password, errorCallback) {\n        var data = {\n            username: username,\n            password: password,\n            clientName: config.clientName\n        };\n\n        this.http\n            .post(config.loginUrl, data)\n            .then((response) => response.content)\n            .then((session) => {\n\n                // Save to localStorage\n                localStorage[config.tokenName] = JSON.stringify(session);\n\n                // .. and to the session object\n                this.session = session;\n\n                if(session.session.portal === 'employee'){\n                    var defaultPage = session.clientConfig.defaultLandingPage;\n                    var path = defaultPage + '/' + defaultPage;\n\n                    this.app.setRoot('./employee/employee');\n                }else if(session.session.portal === 'broker'){\n                }else{\n                    // .. and set root to app.\n                    this.app.setRoot('./app');\n                }\n\n                \n            }).catch(err => {\n                if(errorCallback){\n                    try{\n                        var response = JSON.parse(err.response);\n                        errorCallback({\n                            stackTrace: err.response,\n                            status: err.statusCode,\n                            statusText: err.statusText,\n                            message: response.message,\n                            code: response.code\n                        });\n                    }catch(err){\n                        console.log(err);\n                    }\n                }\n            });\n    }\n\n    logout() {\n\n        // Clear from localStorage\n        localStorage[config.tokenName] = null;\n\n        // .. and from the session object\n        this.session = null;\n\n        // .. and set root to login.\n        this.app.setRoot('./login/login')\n    }\n    \n    isAuthenticated() {\n        return this.session !== null;\n    }\n\n    can(permission) {\n        return true;\n    }\n}","import { inject } from 'aurelia-framework';\nimport AuthService from './AuthService';\n\n@inject(AuthService)\nexport class Login {\n\n  constructor(AuthService) {\n\n    // Or, if we want to add additional logic to the function, \n    // we can call it within another method on our view model.\n    this.login = () => {\n      if (this.username && this.password) {\n        AuthService.login(this.username, this.password, err => {\n          this.error = err;\n        });\n      } else {\n        this.error = {\n          code: 'cxa-001',\n          message: 'Please enter a username and password.'\n        };\n      }\n    }\n  }\n\n  activate() {\n    this.username = '';\n    this.password = '';\n    this.error = '';\n  }\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class AccountsClaims{\n}","export class Claims{\n    constructor() {\n        \n    }\n    configureRouter(config, router) {\n        this.router = router;\n\n        config.title = 'Claims';\n        // remove hash from URL\n        // config.options.pushState = true;\n        // custom base tag\n        // config.options.root = '/';\n        config.map([\n                { route: ['', 'accounts-claims'], name: 'accounts-claims', title: 'Accounts', moduleId: 'employee/claims/accounts-claims', nav: true, settings: {auth: true} },\n                { route: 'submit-claims', name: 'submit-claims', title: 'Submit Claims', moduleId: 'employee/claims/submit-claims', nav: true, settings: {auth: true} },\n                { route: 'pending-claims', name: 'pending-claims', title: 'Pending Claims', moduleId: 'employee/claims/pending-claims', nav: true, settings: {auth: true} },\n                { route: 'history-claims', name: 'history-claims', title: 'Claims History', moduleId: 'employee/claims/history-claims', nav: true, settings: {auth: true} }\n        ]);\n  }\n}","export class HistoryClaims{\n    \n}","export class PendingClaims {\n    \n}","export class SubmitClaims{\n    \n}","// import AuthService from '../../login/AuthService';\n// import { inject } from 'aurelia-framework';\n\n// @inject(AuthService)\n// export class Dashboard {\n//   constructor(AuthService) {\n//     this.auth = AuthService;\n//   }\n\n//   configureRouter(config, router) {\n//     this.router = router;\n\n//     config.title = 'CXA';\n//     // remove hash from URL\n//     // config.options.pushState = true;\n//     // custom base tag\n//     // config.options.root = '/';\n//     config.map([\n//         { route: 'dashboard', name: 'dashboard', title: 'Dashboard', moduleId: 'employee/dashboard/dashboard', nav: true, settings: {'auth': true} },\n//         { route: 'wellness', name: 'wellness', title: 'Wellness', moduleId: 'employee/wellness/wellness', nav: true, settings: {'auth': true} }\n//     ]);\n//   }\n// }\nexport class Dashboard {\n    \n}","export class Wellness{\n    \n}",null,null,null,null,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  padding: 1em;\n}\n\n.page-host{\n    display:flex;\n    flex-direction: column;\n}","$menu-bg-color: #e7e7e7;\n\n.secondary-navigation{\n    &:active{\n        color: #FFF;\n    }\n\n    ul {\n        color: #333;\n        background-color: $menu-bg-color;\n    }\n\n    nav {\n        display:flex;\n    }\n}","* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box; }\n\nbody {\n  padding: 1em; }\n\n.page-host {\n  display: flex;\n  flex-direction: column; }\n\n.secondary-navigation:active {\n  color: #FFF; }\n\n.secondary-navigation ul {\n  color: #333;\n  background-color: #e7e7e7; }\n\n.secondary-navigation nav {\n  display: flex; }\n\n/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzIjpbInN0eWxlL21haW4uc2NzcyIsInN0eWxlL19nbG9iYWwuc2NzcyIsInN0eWxlL19uYXZpZ2F0aW9uLnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnZ2xvYmFsJztcbkBpbXBvcnQgJ25hdmlnYXRpb24nOyIsIioge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmJvZHkge1xuICBwYWRkaW5nOiAxZW07XG59XG5cbi5wYWdlLWhvc3R7XG4gICAgZGlzcGxheTpmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59IiwiJG1lbnUtYmctY29sb3I6ICNlN2U3ZTc7XG5cbi5zZWNvbmRhcnktbmF2aWdhdGlvbntcbiAgICAmOmFjdGl2ZXtcbiAgICAgICAgY29sb3I6ICNGRkY7XG4gICAgfVxuXG4gICAgdWwge1xuICAgICAgICBjb2xvcjogIzMzMztcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1lbnUtYmctY29sb3I7XG4gICAgfVxuXG4gICAgbmF2IHtcbiAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgIH1cbn0iXSwibWFwcGluZ3MiOiJBQ0FBLEFBQUEsQ0FBQyxDQUFDO0VBQ0EsTUFBTSxFQUFFLENBQUU7RUFDVixPQUFPLEVBQUUsQ0FBRTtFQUNYLFVBQVUsRUFBRSxVQUFXLEdBQ3hCOztBQUVELEFBQUEsSUFBSSxDQUFDO0VBQ0gsT0FBTyxFQUFFLEdBQUksR0FDZDs7QUFFRCxBQUFBLFVBQVUsQ0FBQTtFQUNOLE9BQU8sRUFBQyxJQUFLO0VBQ2IsY0FBYyxFQUFFLE1BQU8sR0FDMUI7O0FDWEQsQUFBQSxxQkFBcUIsQUFDaEIsT0FBTyxDQUFBO0VBQ0osS0FBSyxFQUFFLElBQUssR0FDZjs7QUFITCxBQUtJLHFCQUxpQixDQUtqQixFQUFFLENBQUM7RUFDQyxLQUFLLEVBQUUsSUFBSztFQUNaLGdCQUFnQixFQVRSLE9BQU8sR0FVbEI7O0FBUkwsQUFVSSxxQkFWaUIsQ0FVakIsR0FBRyxDQUFDO0VBQ0EsT0FBTyxFQUFDLElBQUssR0FDaEIiLCJuYW1lcyI6W119 */\n",null,null,null,null,null,null,null],"sourceRoot":"../src"}