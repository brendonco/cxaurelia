{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","/Users/brendon/Project/cxaurelia/src/model/login/login.js","/Users/brendon/Project/cxaurelia/src/model/login/index.js","/Users/brendon/Project/cxaurelia/src/app.html","/Users/brendon/Project/cxaurelia/src/views/login/login.html"],"names":["App","configureRouter","config","title","addPipelineStep","AuthorizeStep","map","route","name","moduleId","nav","auth","layoutView","redirect","run","navigationInstruction","next","getAllInstructions","some","i","isLoggedIn","isLogin","cancel","auth_token","localStorage","getItem","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot"],"mappings":";;;;;;;;;;;;;;MAEaA,cAAAA;;;;;kBAIXC,2CAAgBC,QAAQ;AACtBA,aAAOC,KAAP,GAAe,SAAf;AACAD,aAAOE,eAAP,CAAuB,WAAvB,EAAoCC,aAApC;AACAH,aAAOI,GAAP,CAAW,CACT,EAAEC,OAAO,CAAC,SAAD,CAAT,EAAyBC,MAAM,SAA/B,EAAgDC,UAAU,SAA1D,EAA0EC,KAAK,IAA/E,EAAqFP,OAAM,SAA3F,EADS,EAET,EAAEI,OAAO,QAAT,EAAyBC,MAAM,QAA/B,EAAgDC,UAAU,QAA1D,EAA0EC,KAAK,IAA/E,EAAqFC,MAAM,IAA3F,EAFS,EAGT,EAAEJ,OAAO,cAAT,EAAyBC,MAAM,aAA/B,EAAgDC,UAAU,cAA1D,EAA0EC,KAAK,IAA/E,EAAqFP,OAAM,cAA3F,EAHS,EAIT,EAAEI,OAAO,OAAT,EAAkBC,MAAM,OAAxB,EAAiCC,UAAU,mBAA3C,EAAgEG,YAAY,wBAA5E,EAJS,EAKT,EAAEL,OAAO,EAAT,EAAaM,UAAU,SAAvB,EALS,CAAX;AAOD;;;;;MAIGR;;;;;4BACJS,mBAAIC,uBAAuBC,MAAM;AAC/B,UAAID,sBAAsBE,kBAAtB,GAA2CC,IAA3C,CAAgD;AAAA,eAAKC,EAAEjB,MAAF,CAASS,IAAd;AAAA,OAAhD,CAAJ,EAAyE;AACvE,YAAIS,aAAaf,cAAcgB,OAAd,EAAjB;AACA,YAAI,CAACD,UAAL,EAAiB;AACf,iBAAOJ,KAAKM,MAAL,CAAY,4BAAa,OAAb,CAAZ,CAAP;AACD;AACF;;AAED,aAAON,MAAP;AACD;;kBAEMI,mCAAsB;AAC3B,UAAIG,aAAaC,aAAaC,OAAb,CAAqB,YAArB,CAAjB;AACA,aAAQ,OAAOF,UAAP,KAAsB,WAAtB,IAAqCA,eAAe,IAA5D;AACD;;;;;;;;;;;oBCnCY;AACbG,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AANhBC,UAAQ3B,MAAR,CAAe;AACb4B,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASH,SAAT,CAAmBI,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYT,KAAhB,EAAuB;AACrBM,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYT,OAAhB,EAAyB;AACvBK,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBeZ,YAAAA;AAAT,WAASA,SAAT,CAAmB1B,MAAnB,EAA2B,CAEjC;;ACFD;ACAA;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["import {Redirect} from 'aurelia-router';\n\nexport class App {\n  // constructor() {\n  //   this.message = 'Hello World!';\n  // }\n  configureRouter(config) {\n    config.title = 'Aurelia';\n    config.addPipelineStep('authorize', AuthorizeStep);\n    config.map([\n      { route: ['welcome'],    name: 'welcome',       moduleId: 'welcome',      nav: true, title:'Welcome' },\n      { route: 'flickr',       name: 'flickr',        moduleId: 'flickr',       nav: true, auth: true },\n      { route: 'child-router', name: 'childRouter',   moduleId: 'child-router', nav: true, title:'Child Router' },\n      { route: 'login', name: 'login', moduleId: 'model/login/index', layoutView: 'views/login/login.html' },\n      { route: '', redirect: 'welcome' }\n    ]);\n  }\n}\n\n\nclass AuthorizeStep {\n  run(navigationInstruction, next) {\n    if (navigationInstruction.getAllInstructions().some(i => i.config.auth)) {\n      var isLoggedIn = AuthorizeStep.isLogin();//false;\n      if (!isLoggedIn) {\n        return next.cancel(new Redirect('login'));\n      }\n    }\n\n    return next();\n  }\n\n  static isLoggedIn(): boolean {\n    var auth_token = localStorage.getItem(\"auth_token\");\n    return (typeof auth_token !== \"undefined\" && auth_token !== null);\n  }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n",null,null,null,null],"sourceRoot":"../src"}